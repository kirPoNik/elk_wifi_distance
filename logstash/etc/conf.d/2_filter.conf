filter {


    if "_jsonparsefailure"  not in [tags] {

        mutate {
            replace => { "host" => "%{[headers][http_x_forwarded_for]}" }
            ##remove_field => ["headers"]
        }
        # converting to lowercase [ 
        ruby { code => "
                event.to_hash.keys.each do |k|
                    next unless k =~ /[A-Z]/
                    value = event.get(k)
                    case value
                    when String
                        event.remove(k)         
                        event.set( k.downcase , value.strip )
                    end
                end
                "
        }




        date {
                ## "fisrt_seen" => "2016-12-04 21:18:07"
                match => [ "fisrt_seen", "YYYY-MM-dd HH:mm:ss" ]
                ###timezone => "UTC+05:00 Islamabad, Karachi"
                remove_field => [ "timestamp"  ]
        }
        translate {
                ### http://www.radio-electronics.com/info/wireless/wi-fi/80211-channels-number-frequencies-bandwidth.php
                dictionary => {
                    "1" => "2401"
                    "2" => "2406"
                    "3" => "2411"
                    "4" => "2416"
                    "5" => "2421"
                    "6" => "2426"
                    "7" => "2431"
                    "8" => "2436"
                    "9" => "2441"
                    "10" => "2446"
                    "11" => "2451"
                    "12" => "2456"
                    "13" => "2461"
                    "14" => "2473"
                }
                field => "channel"
                destination => "channel-frequency-int"
        } 

        mutate {
            rename => {
                "bssid" => "mac-address"
                "essid" => "network-ssid"
                "power" => "signal-strength-int"
            }
            convert => {
                "signal-strength-int" => "integer"
                "channel-frequency-int" => "integer"
            }
        }

    }
   
    if [channel-frequency-int]  and [signal-strength-int] {
        
        ruby {
            code => "freq = event.get('channel-frequency-int')
                     strength = event.get('signal-strength-int')
                     distance =  10 ** ((  27.55 - ( 20 * Math.log10(freq) ) + strength.abs )/20)
                     event.set('distance', distance)"
        }
        
    }

}
