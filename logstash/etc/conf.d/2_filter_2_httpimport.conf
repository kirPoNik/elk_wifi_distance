    if "http_import" in [tags] and "_jsonparsefailure"  not in [tags]  {

            mutate {
                replace => { "host" => "%{[headers][http_x_forwarded_for]}" }
                remove_field => ["headers"]
            }

            # converting to lowercase [ 
            ruby { code => "
                event.to_hash.keys.each do |k|
                    next unless k =~ /[A-Z]/
                    value = event.get(k)
                    case value
                    when String
                        event.remove(k)         
                        event.set( k.downcase , value.strip )
                    end
                end
                "
            }


            date {
                ## "fisrt_seen" => "2016-12-04 21:18:07"
                match => [ "fisrt_seen", "YYYY-MM-dd HH:mm:ss" ]
                timezone => "UTC"
            }

            if "_dateparsefailure" in [tags] {
                drop {}
            }

            if [channel] {
                translate {
                ### http://www.radio-electronics.com/info/wireless/wi-fi/80211-channels-number-frequencies-bandwidth.php
                  dictionary => {
                    "1" => "2401"
                    "2" => "2406"
                    "3" => "2411"
                    "4" => "2416"
                    "5" => "2421"
                    "6" => "2426"
                    "7" => "2431"
                    "8" => "2436"
                    "9" => "2441"
                    "10" => "2446"
                    "11" => "2451"
                    "12" => "2456"
                    "13" => "2461"
                    "14" => "2473"
                 }
                 fallback => "2426"
                 field => "channel"
                 destination => "channel_frequency_int"
                } 
            } else  {
                mutate {
                    add_field => {
                        "channel_frequency_int" => "2426"
                    }
                }
            }


            mutate {
                rename => {
                    "station_mac" => "mac_address"
                    "essid" => "network_ssid"
                    "probed_essid" => "network_ssid"
                    "power" => "signal_strength_int"
                    "reporting_device" => "device_id"
                }
                convert => {
                    "signal_strength_int" => "integer"
                    "channel_frequency_int" => "integer"
                }
            }

    }
