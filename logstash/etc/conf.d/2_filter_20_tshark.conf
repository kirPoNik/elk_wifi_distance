    if "tshark_capuring" in [tags] {

		# frame.time_epoch tzsp.wlan.signal tzsp.wlan.channel tzsp.sensormac wlan.sa wlan.ta wlan.ra wlan.da wlan.fc.tods wlan.fc.fromds

		## "1514392963.819416142","-71","10","64:d1:54:c1:63:6d","f8:63:94:04:12:51","f8:63:94:04:12:51","ff:ff:ff:ff:ff:ff","ff:ff:ff:ff:ff:ff","0","0","f8:63:94:04:12:51","0","8","8"

		csv {
			columns => [ "time_epoch", "signal_strength_int", "channel", "device_id", "addr1", "addr2", "addr3", "addr4", "to_ds", "from_ds", "addr5", "wlan_type", "wlan_subtype", "wlan_type_subtype", "wlan_duration"]
			skip_empty_columns => true
		}

#		grok {
#			match => [ "message", "^(?<time_epoch>[^\s]+)\s+(?<signal_strength_int>[^\s]+)\s+(?<channel>[^\s]+)\s+(?<device_id>[^\s]+)\s+(?<addr1>[^\s]+)\s+(?<addr2>[^\s]+)\s+(?<addr3>[^\s]+)\s+(?<addr4>[^\s]+)\s+(?<to_ds>[^\s]+)\s+(?<from_ds>[^\s]+)\s+(?<addr5>[^\s]+)\s+(?<wlan_type>[^\s]+)\s+(?<wlan_subtype>[^\s]+)\s+(?<wlan_type_subtype>[^\s]+)"  ]
#		}	

		## OUI DBs
		#	http://standards-oui.ieee.org/oui/oui.txt
		#	http://standards-oui.ieee.org/oui36/oui36.txt
		#	http://standards-oui.ieee.org/oui28/mam.txt


		translate {
			field => "channel"
			destination => "channel_frequency_int"
	    	dictionary => [ 
				"1", "2412",
				"2", "2417",
				"3", "2422",
				"4", "2427",
				"5", "2432",
				"6", "2437",
				"7", "2442",
				"8", "2447",
				"9", "2452",
				"10", "2457",
				"11", "2462",
				"12", "2467",
				"13", "2472",
				"14", "2484"
			]
			##remove_field => "channel"
		}



		## http://80211notes.blogspot.com/2013/09/understanding-address-fields-in-80211.html
		if [from_ds] == "1" and [to_ds] == "0"  {
			## from AP to device
			if [wlan_subtype] == "8"  {
				## Beacon
				mutate {
            		add_field => {
                		"mac_address" => "%{addr3}"
        	        }
            	}
			}
			if [wlan_subtype] == "12"  {
				## Deauthentication
				mutate {
            		add_field => {
                		"mac_address" => "%{addr3}"
        	        }
            	}
			}
			if [wlan_subtype] == "0"  {
				## Association Request
				mutate {
            		add_field => {
                		"mac_address" => "%{addr1}"
        	        }
            	}
			}
			if [wlan_subtype] == "4"  {
				## Probe Request
				mutate {
            		add_field => {
                		"mac_address" => "%{addr3}"
        	        }
            	}
			}
		}

		if [from_ds] == "0" and [to_ds] == "1"  {
			## from device to AC
			if [wlan_subtype] == "8"  {
				## Beacon
				mutate {
            		add_field => {
                		"mac_address" => "%{addr1}"
        	        }
            	}
			}
			if [wlan_subtype] == "12"  {
				## Deauthentication
				mutate {
            		add_field => {
                		"mac_address" => "%{addr1}"
        	        }
            	}
			}
			if [wlan_subtype] == "0"  {
				## Association Request
				mutate {
            		add_field => {
                		"mac_address" => "%{addr1}"
        	        }
            	}
			}
			if [wlan_subtype] == "4"  {
				## Probe Request
				mutate {
            		add_field => {
                		"mac_address" => "%{addr1}"
        	        }
            	}
			}
        }


		if [from_ds] == "0" and [to_ds] == "0"  
		{

			if  [wlan_subtype] == "10"  and  [wlan_type_subtype] ==  "10"   {
				## to_ds:0 AND from_ds:0
				## Disassociation
				mutate {
	                add_field => {
    	                "mac_address" => "%{addr1}"
	                }
    	        }
			} 
			if  [wlan_subtype] == "11"  and  [wlan_type_subtype] ==  "11"    {
				## to_ds:0 AND from_ds:0
				## Authentication
				mutate {
	                add_field => {
    	                "mac_address" => "%{addr1}"
	                }
				}
			}
			if  [wlan_subtype] == "11"  and  [wlan_type_subtype] ==  "27"    {
				## to_ds:0 AND from_ds:0
				## Authentication
				mutate {
	                add_field => {
    	                "mac_address" => "%{addr3}"
	                }
				}
			}
			if  [wlan_subtype] == "12"  and  [wlan_type_subtype] ==  "12"    {
				## to_ds:0 AND from_ds:0
				## Deauthentication
				mutate {
	                add_field => {
    	                "mac_address" => "%{addr1}"
	                }
				}
			}
			if  [wlan_subtype] == "12"  and  [wlan_type_subtype] ==  "28"    {
				## to_ds:0 AND from_ds:0
				## Deauthentication
				mutate {
	                add_field => {
    	                "mac_address" => "%{addr3}"
	                }
				}
			}
			if  [wlan_subtype] == "13"  and  [wlan_type_subtype] ==  "13"    {
				## to_ds:0 AND from_ds:0
				## ACK
				mutate {
	                add_field => {
    	                "mac_address" => "%{addr1}"
	                }
				}
			}
			if  [wlan_subtype] == "13"  and  [wlan_type_subtype] ==  "29"    {
				## to_ds:0 AND from_ds:0
				## ACK
				mutate {
	                add_field => {
    	                "mac_address" => "%{addr3}"
	                }
				}
			}
			if  [wlan_subtype] == "8"  and  [wlan_type_subtype] ==  "8"    {
				## to_ds:0 AND from_ds:0
				## Beacon from router to FF:FF:FF:FF:FF:FF
			}
			if  [wlan_subtype] == "8"  and  [wlan_type_subtype] ==  "24"    {
				## to_ds:0 AND from_ds:0
				## Beacon
				mutate {
	                add_field => {
    	                "mac_address" => "%{addr3}"
	                }
				}
			}
			if [wlan_subtype] == "9" and  [wlan_type_subtype] ==  "25"  {
				## to_ds:0 AND from_ds:0
				## ATIM
				mutate {
	                add_field => {
    	                "mac_address" => "%{addr3}"
	                }
    	        }
			} 

			if [wlan_subtype] == "0" {
    	        ## Association Request: 
        	    ## to_ds:0 AND from_ds:0
            	mutate {
	                add_field => {
    	                "mac_address" => "%{addr1}"
                	}   
	            }       
    	    }

			if  [wlan_subtype] == "1"  {
    	        ## to_ds:0 AND from_ds:0
        	    ## Association Response: from AP to STA
	            mutate { 
    	            add_field => {
        	            "mac_address" => "%{addr3}"
	                }   
    	        }
			}
			if [wlan_subtype] == "2"  {
        	    ## Reassociation  Request: from STA to space ....
            	## to_ds:0 AND from_ds:0
	            mutate {
    	            add_field => {
        	            "mac_address" => "%{addr1}"
	                }   
    	        }       
        	}
			if [wlan_subtype] == "3" {
    	        ## to_ds:0 AND from_ds:0
        	    ## Reassociation Response: from AP to STA
	            mutate { 
    	            add_field => {
        	            "mac_address" => "%{addr3}"
	                }   
    	        }
			}
			if [wlan_subtype] == "4"  {
    	        ## Probe Request: from STA to space ....
				## to_ds:0 AND from_ds:0
            	mutate {
	                add_field => {
    	                "mac_address" => "%{addr1}"
	                }
    	        }
	        }

			if [wlan_subtype] == "5"  {
				## to_ds:0 AND from_ds:0
				## Probe Response: from AP to STA
				mutate {
	                add_field => {
    	                "mac_address" => "%{addr3}"
	                }
    	        }
			} 

		}

		mutate {
			uppercase => ["addr1", "addr2", "addr3", "addr4", "addr5"]
			uppercase => [ "device_id", "mac_address", "src_mac_address", "dst_mac_address" ]
		}

		if [device_id] and  [device_id] =~ /[:]/  {
		
			mutate {
    			gsub => [
      				"device_id", ":", ""
	    		]
  			}
		}
		date {
			match => [ "time_epoch", "UNIX" ]
			##remove_field => "time_epoch"
		}

		mutate {
			convert => {
        		"signal_strength_int" => "integer"
	            "channel_frequency_int" => "integer"
	            "wlan_duration" => "integer"
    	    }
		}	
	}

